buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
        gradleDockerVersion = '0.19.2'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${gradleDockerVersion}")
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:0.9.8"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: "com.google.cloud.tools.jib"

group = 'cn.com.hellowood'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }

    mavenCentral()
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

docker {
    name "registry.cn-qingdao.aliyuncs.com/hellowoodes/k8s-service"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

jib {
    from {
        image = 'registry.hub.docker.com/openjdk:8-jdk-alpine'
    }
    to {
        image = 'registry.cn-qingdao.aliyuncs.com/hellowoodes/k8s-service'
        credHelper = 'osxkeychain'
    }
}